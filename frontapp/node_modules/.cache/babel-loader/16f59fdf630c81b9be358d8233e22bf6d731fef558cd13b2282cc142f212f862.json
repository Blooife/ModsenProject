{"ast":null,"code":"var _jsxFileName = \"D:\\\\RiderProjects\\\\Modsen\\\\frontapp\\\\src\\\\components\\\\events.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PostService from \"../services/post.service\";\nimport AuthService from \"../services/auth.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Events = () => {\n  _s();\n  const [privatePosts, setPrivatePosts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(2);\n  const [totalItems, setTotalItems] = useState(0);\n  const user = AuthService.getCurrentUser();\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const response = await PostService.getAllEvents();\n        setPrivatePosts(response.data);\n        setTotalItems(response.data.length);\n      } catch (error) {\n        console.error(\"Error fetching events:\", error);\n      }\n    };\n    fetchEvents();\n  }, []);\n\n  // Расчет индексов начала и конца текущей страницы\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = privatePosts.slice(indexOfFirstItem, indexOfLastItem);\n\n  // Изменение страницы\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row row-cols-1 row-cols-md-3 g-4\",\n        children: currentItems.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card border-primary\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/eventDetails/${post.id}`,\n                children: post.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `/pictures/${post.picture}`,\n              className: \"card-img-top\",\n              alt: post.name,\n              style: {\n                objectFit: \"cover\",\n                height: \"300px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: post.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination\",\n        children: Array.from({\n          length: Math.ceil(totalItems / itemsPerPage)\n        }).map((_, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"page-item\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"page-link\",\n            onClick: () => paginate(index + 1),\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Events, \"BqG36ffBYwxRgNZi/d0HHaJPRuk=\");\n_c = Events;\nexport default Events;\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["React","useState","useEffect","Link","PostService","AuthService","jsxDEV","_jsxDEV","Events","_s","privatePosts","setPrivatePosts","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","totalItems","setTotalItems","user","getCurrentUser","fetchEvents","response","getAllEvents","data","length","error","console","indexOfLastItem","indexOfFirstItem","currentItems","slice","paginate","pageNumber","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","post","to","id","name","src","picture","alt","style","objectFit","height","description","Array","from","Math","ceil","_","index","onClick","_c","$RefreshReg$"],"sources":["D:/RiderProjects/Modsen/frontapp/src/components/events.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PostService from \"../services/post.service\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst Events = () => {\r\n  const [privatePosts, setPrivatePosts] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(2);\r\n  const [totalItems, setTotalItems] = useState(0);\r\n\r\n  const user = AuthService.getCurrentUser();\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      try {\r\n        const response = await PostService.getAllEvents();\r\n        setPrivatePosts(response.data);\r\n        setTotalItems(response.data.length);\r\n      } catch (error) {\r\n        console.error(\"Error fetching events:\", error);\r\n      }\r\n    };\r\n\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  // Расчет индексов начала и конца текущей страницы\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = privatePosts.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  // Изменение страницы\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mt-3\">\r\n        <h2>Events</h2>\r\n        <div className=\"row row-cols-1 row-cols-md-3 g-4\">\r\n          {currentItems.map((post) => (\r\n            <div className=\"col\" key={post.id}>\r\n              <div className=\"card border-primary\">\r\n                <div className=\"card-header\">\r\n                  <Link to={`/eventDetails/${post.id}`}>{post.name}</Link>\r\n                </div>\r\n                <img\r\n                  src={`/pictures/${post.picture}`}\r\n                  className=\"card-img-top\"\r\n                  alt={post.name}\r\n                  style={{ objectFit: \"cover\", height: \"300px\" }}\r\n                />\r\n                <div className=\"card-body\">\r\n                  <p className=\"card-text\">{post.description}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <nav>\r\n        <ul className=\"pagination\">\r\n          {Array.from({ length: Math.ceil(totalItems / itemsPerPage) }).map(\r\n            (_, index) => (\r\n              <li key={index} className=\"page-item\">\r\n                <button\r\n                  className=\"page-link\"\r\n                  onClick={() => paginate(index + 1)}\r\n                >\r\n                  {index + 1}\r\n                </button>\r\n              </li>\r\n            )\r\n          )}\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Events;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}