{"ast":null,"code":"import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nconst baseURL = \"http://localhost:5152\";\nconst API_URL = \"/api/v1/\";\nconst getAllEvents = () => {\n  return axios.get(baseURL + API_URL + \"events\", {\n    headers: authHeader()\n  });\n};\nconst getEventById = eventId => {\n  return axios.get(baseURL + API_URL + \"events/\" + eventId, {\n    headers: authHeader()\n  }).catch(error => {\n    throw error; // Пробрасываем ошибку дальше для обработки в компоненте Login\n  });\n};\nconst updateEvent = formData => {\n  return axios.put(baseURL + API_URL + \"events\", formData, {\n    headers: authHeader()\n  }).catch(error => {\n    throw error; // Пробрасываем ошибку дальше для обработки в компоненте Login\n  });\n};\nconst addEvent = formData => {\n  return axios.post(baseURL + API_URL + \"events\", formData, {\n    headers: authHeader()\n  }).catch(error => {\n    throw error; // Пробрасываем ошибку дальше для обработки в компоненте Login\n  });\n};\nconst postService = {\n  getAllEvents,\n  getEventById,\n  updateEvent,\n  addEvent\n};\nexport default postService;","map":{"version":3,"names":["axios","authHeader","baseURL","API_URL","getAllEvents","get","headers","getEventById","eventId","catch","error","updateEvent","formData","put","addEvent","post","postService"],"sources":["D:/RiderProjects/Modsen/frontapp/src/services/post.service.js"],"sourcesContent":["import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst baseURL = \"http://localhost:5152\";\r\n\r\nconst API_URL = \"/api/v1/\";\r\n\r\nconst getAllEvents = () => {\r\n  return axios.get(baseURL+API_URL+\"events\", { headers: authHeader() });\r\n};\r\n\r\nconst getEventById = (eventId) => {\r\n  return axios.get(baseURL+API_URL+\"events/\"+eventId, { headers: authHeader() })\r\n  .catch((error) => {\r\n    throw error; // Пробрасываем ошибку дальше для обработки в компоненте Login\r\n  });\r\n};\r\n\r\nconst updateEvent = (formData) => {\r\n  return axios.put(baseURL+API_URL+\"events\", formData, { headers: authHeader() })\r\n  .catch((error) => {\r\n    throw error; // Пробрасываем ошибку дальше для обработки в компоненте Login\r\n  });\r\n};\r\n\r\nconst addEvent = (formData) => {\r\n  return axios.post(baseURL+API_URL+\"events\", formData, { headers: authHeader() })\r\n  .catch((error) => {\r\n    throw error; // Пробрасываем ошибку дальше для обработки в компоненте Login\r\n  });\r\n};\r\n\r\n\r\nconst postService = {\r\n  getAllEvents,\r\n  getEventById,\r\n  updateEvent,\r\n  addEvent,\r\n};\r\n\r\nexport default postService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,eAAe;AAEtC,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,MAAMC,OAAO,GAAG,UAAU;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB,OAAOJ,KAAK,CAACK,GAAG,CAACH,OAAO,GAACC,OAAO,GAAC,QAAQ,EAAE;IAAEG,OAAO,EAAEL,UAAU,CAAC;EAAE,CAAC,CAAC;AACvE,CAAC;AAED,MAAMM,YAAY,GAAIC,OAAO,IAAK;EAChC,OAAOR,KAAK,CAACK,GAAG,CAACH,OAAO,GAACC,OAAO,GAAC,SAAS,GAACK,OAAO,EAAE;IAAEF,OAAO,EAAEL,UAAU,CAAC;EAAE,CAAC,CAAC,CAC7EQ,KAAK,CAAEC,KAAK,IAAK;IAChB,MAAMA,KAAK,CAAC,CAAC;EACf,CAAC,CAAC;AACJ,CAAC;AAED,MAAMC,WAAW,GAAIC,QAAQ,IAAK;EAChC,OAAOZ,KAAK,CAACa,GAAG,CAACX,OAAO,GAACC,OAAO,GAAC,QAAQ,EAAES,QAAQ,EAAE;IAAEN,OAAO,EAAEL,UAAU,CAAC;EAAE,CAAC,CAAC,CAC9EQ,KAAK,CAAEC,KAAK,IAAK;IAChB,MAAMA,KAAK,CAAC,CAAC;EACf,CAAC,CAAC;AACJ,CAAC;AAED,MAAMI,QAAQ,GAAIF,QAAQ,IAAK;EAC7B,OAAOZ,KAAK,CAACe,IAAI,CAACb,OAAO,GAACC,OAAO,GAAC,QAAQ,EAAES,QAAQ,EAAE;IAAEN,OAAO,EAAEL,UAAU,CAAC;EAAE,CAAC,CAAC,CAC/EQ,KAAK,CAAEC,KAAK,IAAK;IAChB,MAAMA,KAAK,CAAC,CAAC;EACf,CAAC,CAAC;AACJ,CAAC;AAGD,MAAMM,WAAW,GAAG;EAClBZ,YAAY;EACZG,YAAY;EACZI,WAAW;EACXG;AACF,CAAC;AAED,eAAeE,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}