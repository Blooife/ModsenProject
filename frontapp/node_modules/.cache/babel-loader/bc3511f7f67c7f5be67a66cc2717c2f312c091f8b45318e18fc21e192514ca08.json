{"ast":null,"code":"import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport handleRefresh from '../components/refresh';\nimport { useNavigate, Link } from \"react-router-dom\";\nconst baseURL = \"http://localhost:5152\";\nconst API_URL = \"/api/v1/\";\nconst navigate = useNavigate();\nconst getAllEvents = () => {\n  return axios.get(baseURL + API_URL + \"events\", {\n    headers: authHeader()\n  }).catch(error => {\n    if (error.response == null) {\n      const user = AuthService.getCurrentUser();\n      handleRefresh(user, navigate);\n    }\n    throw error;\n  });\n};\nconst getEventById = eventId => {\n  return axios.get(baseURL + API_URL + \"events/\" + eventId, {\n    headers: authHeader()\n  }).catch(error => {\n    throw error;\n  });\n};\nconst deleteEvent = eventId => {\n  return axios.delete(baseURL + API_URL + \"events/\" + eventId, {\n    headers: authHeader()\n  }).catch(error => {\n    throw error;\n  });\n};\nconst updateEvent = formData => {\n  return axios.put(baseURL + API_URL + \"events\", formData, {\n    headers: authHeader()\n  }).catch(error => {\n    throw error;\n  });\n};\nconst addEvent = formData => {\n  return axios.post(baseURL + API_URL + \"events\", formData, {\n    headers: authHeader()\n  }).catch(error => {\n    throw error;\n  });\n};\nconst getFilteredEvents = (category, place) => {\n  return axios.post(baseURL + API_URL + \"events/getFilteredEvents\", {\n    category,\n    place,\n    headers: authHeader()\n  }).catch(error => {\n    throw error;\n  });\n};\nconst postService = {\n  getAllEvents,\n  getEventById,\n  updateEvent,\n  addEvent,\n  deleteEvent,\n  getFilteredEvents\n};\nexport default postService;","map":{"version":3,"names":["axios","authHeader","handleRefresh","useNavigate","Link","baseURL","API_URL","navigate","getAllEvents","get","headers","catch","error","response","user","AuthService","getCurrentUser","getEventById","eventId","deleteEvent","delete","updateEvent","formData","put","addEvent","post","getFilteredEvents","category","place","postService"],"sources":["D:/RiderProjects/Modsen/frontapp/src/services/post.service.js"],"sourcesContent":["import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\nimport handleRefresh from '../components/refresh';\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\n\r\nconst baseURL = \"http://localhost:5152\";\r\n\r\nconst API_URL = \"/api/v1/\";\r\n\r\nconst navigate = useNavigate();\r\n\r\nconst getAllEvents = () => {\r\n  return axios.get(baseURL+API_URL+\"events\", { headers: authHeader() })\r\n  .catch((error) => {    \r\n    if (error.response == null) {\r\n      const user = AuthService.getCurrentUser();\r\n      handleRefresh(user, navigate);\r\n    }\r\n    throw error; \r\n  });\r\n};\r\n\r\nconst getEventById = (eventId) => {\r\n  return axios.get(baseURL+API_URL+\"events/\"+eventId, { headers: authHeader() })\r\n  .catch((error) => {\r\n    throw error; \r\n  });\r\n};\r\n\r\nconst deleteEvent = (eventId) => {\r\n  return axios.delete(baseURL+API_URL+\"events/\"+eventId, { headers: authHeader() })\r\n  .catch((error) => {\r\n    throw error; \r\n  });\r\n};\r\n\r\nconst updateEvent = (formData) => {\r\n  return axios.put(baseURL+API_URL+\"events\", formData, { headers: authHeader() })\r\n  .catch((error) => {\r\n    throw error; \r\n  });\r\n};\r\n\r\nconst addEvent = (formData) => {\r\n  return axios.post(baseURL+API_URL+\"events\", formData, { headers: authHeader() })\r\n  .catch((error) => {\r\n    throw error; \r\n  });\r\n};\r\n\r\nconst getFilteredEvents = (category, place) => {\r\n  return axios.post(baseURL+API_URL+\"events/getFilteredEvents\", { category, place, headers: authHeader() })\r\n  .catch((error) => {\r\n    throw error; \r\n  });\r\n};\r\n\r\n\r\nconst postService = {\r\n  getAllEvents,\r\n  getEventById,\r\n  updateEvent,\r\n  addEvent,\r\n  deleteEvent,\r\n  getFilteredEvents,\r\n};\r\n\r\nexport default postService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAOC,aAAa,MAAM,uBAAuB;AACjD,SAASC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AAEpD,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,MAAMC,OAAO,GAAG,UAAU;AAE1B,MAAMC,QAAQ,GAAGJ,WAAW,CAAC,CAAC;AAE9B,MAAMK,YAAY,GAAGA,CAAA,KAAM;EACzB,OAAOR,KAAK,CAACS,GAAG,CAACJ,OAAO,GAACC,OAAO,GAAC,QAAQ,EAAE;IAAEI,OAAO,EAAET,UAAU,CAAC;EAAE,CAAC,CAAC,CACpEU,KAAK,CAAEC,KAAK,IAAK;IAChB,IAAIA,KAAK,CAACC,QAAQ,IAAI,IAAI,EAAE;MAC1B,MAAMC,IAAI,GAAGC,WAAW,CAACC,cAAc,CAAC,CAAC;MACzCd,aAAa,CAACY,IAAI,EAAEP,QAAQ,CAAC;IAC/B;IACA,MAAMK,KAAK;EACb,CAAC,CAAC;AACJ,CAAC;AAED,MAAMK,YAAY,GAAIC,OAAO,IAAK;EAChC,OAAOlB,KAAK,CAACS,GAAG,CAACJ,OAAO,GAACC,OAAO,GAAC,SAAS,GAACY,OAAO,EAAE;IAAER,OAAO,EAAET,UAAU,CAAC;EAAE,CAAC,CAAC,CAC7EU,KAAK,CAAEC,KAAK,IAAK;IAChB,MAAMA,KAAK;EACb,CAAC,CAAC;AACJ,CAAC;AAED,MAAMO,WAAW,GAAID,OAAO,IAAK;EAC/B,OAAOlB,KAAK,CAACoB,MAAM,CAACf,OAAO,GAACC,OAAO,GAAC,SAAS,GAACY,OAAO,EAAE;IAAER,OAAO,EAAET,UAAU,CAAC;EAAE,CAAC,CAAC,CAChFU,KAAK,CAAEC,KAAK,IAAK;IAChB,MAAMA,KAAK;EACb,CAAC,CAAC;AACJ,CAAC;AAED,MAAMS,WAAW,GAAIC,QAAQ,IAAK;EAChC,OAAOtB,KAAK,CAACuB,GAAG,CAAClB,OAAO,GAACC,OAAO,GAAC,QAAQ,EAAEgB,QAAQ,EAAE;IAAEZ,OAAO,EAAET,UAAU,CAAC;EAAE,CAAC,CAAC,CAC9EU,KAAK,CAAEC,KAAK,IAAK;IAChB,MAAMA,KAAK;EACb,CAAC,CAAC;AACJ,CAAC;AAED,MAAMY,QAAQ,GAAIF,QAAQ,IAAK;EAC7B,OAAOtB,KAAK,CAACyB,IAAI,CAACpB,OAAO,GAACC,OAAO,GAAC,QAAQ,EAAEgB,QAAQ,EAAE;IAAEZ,OAAO,EAAET,UAAU,CAAC;EAAE,CAAC,CAAC,CAC/EU,KAAK,CAAEC,KAAK,IAAK;IAChB,MAAMA,KAAK;EACb,CAAC,CAAC;AACJ,CAAC;AAED,MAAMc,iBAAiB,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC7C,OAAO5B,KAAK,CAACyB,IAAI,CAACpB,OAAO,GAACC,OAAO,GAAC,0BAA0B,EAAE;IAAEqB,QAAQ;IAAEC,KAAK;IAAElB,OAAO,EAAET,UAAU,CAAC;EAAE,CAAC,CAAC,CACxGU,KAAK,CAAEC,KAAK,IAAK;IAChB,MAAMA,KAAK;EACb,CAAC,CAAC;AACJ,CAAC;AAGD,MAAMiB,WAAW,GAAG;EAClBrB,YAAY;EACZS,YAAY;EACZI,WAAW;EACXG,QAAQ;EACRL,WAAW;EACXO;AACF,CAAC;AAED,eAAeG,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}