{"ast":null,"code":"var _jsxFileName = \"D:\\\\RiderProjects\\\\Modsen\\\\frontapp\\\\src\\\\components\\\\adminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport PostService from \"../services/post.service\";\nimport AuthService from \"../services/auth.service\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { categoryOptions, placeOptions } from \"./optionsData\";\nimport handleRefresh from './refresh';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const [privatePosts, setPrivatePosts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(3);\n  const user = AuthService.getCurrentUser();\n  const navigate = useNavigate();\n  useEffect(() => {\n    console.log(user);\n    const fetchPosts = async () => {\n      await PostService.getAllEvents().then(response => {\n        setPrivatePosts(response.data);\n      }, async error => {\n        if (error.response == null) {\n          handleRefresh(user, navigate);\n        }\n      });\n    };\n    fetchPosts();\n  }, [navigate]);\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = privatePosts.slice(indexOfFirstPost, indexOfLastPost);\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  const handleDelete = async postId => {\n    try {\n      await PostService.deleteEvent(postId).then(response => {\n        const updatedPosts = privatePosts.filter(post => post.id !== postId);\n        setPrivatePosts(updatedPosts);\n        alert(\"You deleted event successfully\");\n      }, error => {\n        if (error.response == null) {\n          handleRefresh(user, navigate);\n        } else {\n          alert(error.response.data['ErrorMessage']);\n        }\n      });\n    } catch (error) {\n      console.error(\"Error deleting event:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Admin Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/addEvent\",\n        className: \"btn btn-primary mb-3\",\n        children: \"Add Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row row-cols-1 row-cols-md-3 g-4\",\n        children: [privatePosts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card border-primary\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/eventDetails/${post.id}`,\n                children: post.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `/pictures/${post.picture}`,\n              className: \"card-img-top\",\n              alt: post.name,\n              style: {\n                objectFit: \"cover\",\n                height: \"300px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: post.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => handleDelete(post.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/editEvent/${post.id}`,\n                className: \"btn btn-primary\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)), \",\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPage, \"0UTy5oVPTLM1k7rzAyAj5CruM+0=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useState","useEffect","PostService","AuthService","useNavigate","Link","categoryOptions","placeOptions","handleRefresh","jsxDEV","_jsxDEV","AdminPage","_s","privatePosts","setPrivatePosts","currentPage","setCurrentPage","postsPerPage","user","getCurrentUser","navigate","console","log","fetchPosts","getAllEvents","then","response","data","error","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","handleDelete","postId","deleteEvent","updatedPosts","filter","post","id","alert","children","className","fileName","_jsxFileName","lineNumber","columnNumber","to","map","name","src","picture","alt","style","objectFit","height","description","onClick","_c","$RefreshReg$"],"sources":["D:/RiderProjects/Modsen/frontapp/src/components/adminPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PostService from \"../services/post.service\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport { categoryOptions, placeOptions } from \"./optionsData\";\r\nimport handleRefresh from './refresh';\r\n\r\nconst AdminPage = () => {\r\n  const [privatePosts, setPrivatePosts] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(3); \r\n\r\n  const user = AuthService.getCurrentUser();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    console.log(user);\r\n    const fetchPosts = async () => {\r\n      await PostService.getAllEvents().then(\r\n        (response)=>{\r\n          setPrivatePosts(response.data);\r\n        },\r\n        async (error)=>{\r\n          if (error.response == null) {\r\n            handleRefresh(user, navigate);\r\n          }\r\n        }      \r\n    )};       \r\n    fetchPosts();\r\n  }, [navigate]);\r\n\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = privatePosts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);     \r\n\r\n  const handleDelete = async (postId) => {\r\n    try {\r\n      await PostService.deleteEvent(postId).then(\r\n        (response)=>{\r\n          const updatedPosts = privatePosts.filter((post) => post.id !== postId);\r\n          setPrivatePosts(updatedPosts);\r\n          alert(\"You deleted event successfully\");\r\n        },\r\n        (error)=>{\r\n          if (error.response == null) {\r\n            handleRefresh(user, navigate);\r\n          }else{\r\n            alert(error.response.data['ErrorMessage']);\r\n          }          \r\n        }\r\n      )       \r\n    } catch (error) {\r\n      console.error(\"Error deleting event:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mt-3\">\r\n        <h2>Admin Panel</h2>\r\n        <Link to=\"/addEvent\" className=\"btn btn-primary mb-3\">Add Event</Link>\r\n        <div className=\"row row-cols-1 row-cols-md-3 g-4\">\r\n        {privatePosts.map((post) => (\r\n            <div className=\"col\" key={post.id}>\r\n              <div className=\"card border-primary\">\r\n                <div className=\"card-header\">\r\n                  <Link to={`/eventDetails/${post.id}`}>{post.name}</Link>\r\n                </div>\r\n                <img\r\n                  src={`/pictures/${post.picture}`}\r\n                  className=\"card-img-top\"\r\n                  alt={post.name}\r\n                  style={{ objectFit: \"cover\", height: \"300px\" }}\r\n                />\r\n                <div className=\"card-body\">\r\n                  <p className=\"card-text\">{post.description}</p>\r\n                  <button className=\"btn btn-danger\" onClick={() => handleDelete(post.id)}>Delete</button>\r\n                  <Link to={`/editEvent/${post.id}`} className=\"btn btn-primary\">\r\n                    Edit\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        ))},\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}