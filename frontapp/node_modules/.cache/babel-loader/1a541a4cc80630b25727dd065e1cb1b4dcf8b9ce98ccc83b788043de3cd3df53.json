{"ast":null,"code":"var _jsxFileName = \"D:\\\\RiderProjects\\\\Modsen\\\\frontapp\\\\src\\\\components\\\\eventDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport PostService from \"../services/post.service\";\nimport AuthService from \"../services/auth.service\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [eventDetails, setEventDetails] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    place: \"\",\n    date: \"\",\n    maxParticipants: 0\n  });\n  const user = AuthService.getCurrentUser();\n  useEffect(() => {\n    const fetchEventDetails = async () => {\n      try {\n        const response = await PostService.getEventById(id);\n        setEventDetails(response.data);\n        setFormData({\n          name: response.data.name,\n          description: response.data.description,\n          place: response.data.place,\n          date: response.data.date,\n          maxParticipants: response.data.maxParticipants\n        });\n        setLoading(false);\n      } catch (error) {\n        // Handle error\n        setLoading(false);\n        console.error(\"Error fetching event details:\", error);\n      }\n    };\n    fetchEventDetails();\n  }, [id]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Send formData to update event details\n      await PostService.updateEvent(id, formData);\n      // Reload or navigate to another page as needed\n    } catch (error) {\n      // Handle error\n      console.error(\"Error updating event details:\", error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: eventDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card border-primary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [eventDetails.name, \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: `/editEvent/${id}`,\n          className: \"btn btn-primary\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `/pictures/${eventDetails.picture}`,\n          className: \"card-img-top\",\n          alt: eventDetails.name,\n          style: {\n            objectFit: \"cover\",\n            height: \"300px\"\n          } // Установите желаемые размеры здесь\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: eventDetails.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-muted\",\n            children: [\"\\u041C\\u0435\\u0441\\u0442\\u043E: \", eventDetails.place]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-muted\",\n            children: [\"\\u0414\\u0430\\u0442\\u0430: \", new Date(eventDetails.date).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-muted\",\n            children: [\"\\u0412\\u0441\\u0435\\u0433\\u043E \\u0443\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u043E\\u0432: \", eventDetails.maxParticipants]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(EventDetails, \"q/2FH+vaT2gDz39utOPBK2Z++t8=\", false, function () {\n  return [useParams];\n});\n_c = EventDetails;\nexport default EventDetails;\nvar _c;\n$RefreshReg$(_c, \"EventDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","PostService","AuthService","Link","jsxDEV","_jsxDEV","EventDetails","_s","id","eventDetails","setEventDetails","loading","setLoading","formData","setFormData","name","description","place","date","maxParticipants","user","getCurrentUser","fetchEventDetails","response","getEventById","data","error","console","handleInputChange","e","value","target","handleSubmit","preventDefault","updateEvent","children","fileName","_jsxFileName","lineNumber","columnNumber","className","to","src","picture","alt","style","objectFit","height","Date","toLocaleDateString","_c","$RefreshReg$"],"sources":["D:/RiderProjects/Modsen/frontapp/src/components/eventDetails.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport PostService from \"../services/post.service\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst EventDetails = () => {\r\n  const { id } = useParams();\r\n  const [eventDetails, setEventDetails] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    place: \"\",\r\n    date: \"\",\r\n    maxParticipants: 0,\r\n  });\r\n  const user = AuthService.getCurrentUser();\r\n\r\n  useEffect(() => {\r\n    const fetchEventDetails = async () => {\r\n      try {\r\n        const response = await PostService.getEventById(id);\r\n        setEventDetails(response.data);\r\n        setFormData({\r\n          name: response.data.name,\r\n          description: response.data.description,\r\n          place: response.data.place,\r\n          date: response.data.date,\r\n          maxParticipants: response.data.maxParticipants,\r\n        });\r\n        setLoading(false);\r\n      } catch (error) {\r\n        // Handle error\r\n        setLoading(false);\r\n        console.error(\"Error fetching event details:\", error);\r\n      }\r\n    };\r\n\r\n    fetchEventDetails();\r\n  }, [id]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // Send formData to update event details\r\n      await PostService.updateEvent(id, formData);\r\n      // Reload or navigate to another page as needed\r\n    } catch (error) {\r\n      // Handle error\r\n      console.error(\"Error updating event details:\", error);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {eventDetails && (\r\n        <div className=\"card border-primary\">\r\n          <div className=\"card-header\">\r\n            {eventDetails.name}{\" \"}\r\n            <Link to={`/editEvent/${id}`} className=\"btn btn-primary\">\r\n              Edit\r\n            </Link>\r\n          </div>\r\n          <div className=\"card-body\">\r\n          <img\r\n                  src={`/pictures/${eventDetails.picture}`}\r\n                  className=\"card-img-top\"\r\n                  alt={eventDetails.name}\r\n                  style={{ objectFit: \"cover\", height: \"300px\" }} // Установите желаемые размеры здесь\r\n                />\r\n            <p className=\"card-text\">{eventDetails.description}</p>\r\n            <p className=\"card-text\">\r\n              <small className=\"text-muted\">Место: {eventDetails.place}</small>\r\n            </p>\r\n            <p className=\"card-text\">\r\n              <small className=\"text-muted\">Дата: {new Date(eventDetails.date).toLocaleDateString()}</small>\r\n            </p>\r\n            <p className=\"card-text\">\r\n              <small className=\"text-muted\">Всего участников: {eventDetails.maxParticipants}</small>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}