{"ast":null,"code":"import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nconst baseURL = \"http://localhost:5152\";\nconst API_URL = \"/api/auth\";\nconst login = (email, password) => {\n  return axios.post(baseURL + API_URL + \"/login\", {\n    email,\n    password\n  }).then(response => {\n    console.log(response);\n    if (response && response.data && response.data.token) {\n      localStorage.setItem(\"user\", JSON.stringify(response.data));\n      console.log(response.data);\n    }\n    return response;\n  }).catch(error => {\n    throw error;\n  });\n};\nconst loginWithRefreshToken = refreshToken => {\n  return axios.post(baseURL + API_URL + \"/refreshToken\", {\n    refreshToken\n  }).then(response => {\n    if (response.data.token) {\n      localStorage.setItem(\"user\", JSON.stringify(response.data));\n      console.log(\"set item\");\n    }\n    return response;\n  });\n};\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem(\"user\"));\n};\nconst register = formData => {\n  return axios.post(baseURL + API_URL + \"/register\", formData).then(response => {\n    return response;\n  }).catch(error => {\n    throw error;\n  });\n};\nconst getUsersEvents = userId => {\n  return axios.get(baseURL + API_URL + \"/getEvents/\" + userId, {\n    headers: authHeader()\n  }).then(response => {\n    return response;\n  }).catch(error => {\n    throw error;\n  });\n};\nconst registerOnEvent = (userId, eventId) => {\n  return axios.post(baseURL + API_URL + \"/registerOnEvent/\", {\n    userId,\n    eventId\n  }, {\n    headers: authHeader()\n  }).then(response => {\n    return response;\n  }).catch(error => {\n    throw error;\n  });\n};\nconst unregisterFromEvent = (userId, eventId) => {\n  console.log(eventId);\n  return axios.post(baseURL + API_URL + \"/unRegisterOnEvent/\", {\n    userId,\n    eventId,\n    headers: authHeader()\n  }).then(response => {\n    return response;\n  }).catch(error => {\n    throw error;\n  });\n};\nconst authService = {\n  login,\n  loginWithRefreshToken,\n  logout,\n  getCurrentUser,\n  register,\n  getUsersEvents,\n  registerOnEvent,\n  unregisterFromEvent\n};\nexport default authService;","map":{"version":3,"names":["axios","authHeader","baseURL","API_URL","login","email","password","post","then","response","console","log","data","token","localStorage","setItem","JSON","stringify","catch","error","loginWithRefreshToken","refreshToken","logout","removeItem","getCurrentUser","parse","getItem","register","formData","getUsersEvents","userId","get","headers","registerOnEvent","eventId","unregisterFromEvent","authService"],"sources":["D:/RiderProjects/Modsen/frontapp/src/services/auth.service.js"],"sourcesContent":["import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst baseURL = \"http://localhost:5152\";\r\n\r\nconst API_URL = \"/api/auth\";\r\n\r\nconst login = (email, password) => {\r\n  return axios\r\n    .post(baseURL + API_URL + \"/login\", {\r\n      email,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      console.log(response);\r\n      if (response && response.data && response.data.token) {\r\n\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        console.log(response.data);\r\n      }\r\n      return response;\r\n    })\r\n    .catch((error) => {\r\n      throw error; \r\n    });\r\n};\r\n\r\n\r\nconst loginWithRefreshToken = (refreshToken) => {\r\n  return axios\r\n    .post(baseURL + API_URL + \"/refreshToken\", { refreshToken, })\r\n    .then((response) => {\r\n      if (response.data.token) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        console.log(\"set item\");\r\n      }      \r\n      return response;\r\n    }\r\n    );\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\nconst register = (formData) => {\r\n  return axios\r\n    .post(baseURL + API_URL + \"/register\", \r\n      formData)\r\n    .then((response) => {      \r\n      \r\n      return response;\r\n    })\r\n    .catch((error) => {\r\n      throw error; \r\n    });\r\n};\r\n\r\nconst getUsersEvents = (userId) => {\r\n  return axios\r\n    .get(baseURL + API_URL + \"/getEvents/\"+userId, { headers: authHeader() })\r\n    .then((response) => {\r\n      \r\n      return response;\r\n    }).catch((error) => {\r\n      throw error; \r\n    });\r\n};\r\n\r\nconst registerOnEvent = (userId, eventId) => {\r\n  return axios\r\n    .post(baseURL + API_URL + \"/registerOnEvent/\",  { userId, eventId}, {headers: authHeader()} )\r\n    .then((response) => {\r\n      \r\n      return response;\r\n    }).catch((error) => {\r\n      throw error; \r\n    });\r\n};\r\n\r\nconst unregisterFromEvent = (userId, eventId) => {\r\n  console.log(eventId);\r\n  return axios\r\n    .post(baseURL + API_URL + \"/unRegisterOnEvent/\",  { userId, eventId, headers: authHeader() })\r\n    .then((response) => {\r\n      \r\n      return response;\r\n    }).catch((error) => {\r\n      throw error; \r\n    });\r\n};\r\n\r\nconst authService = {\r\n  login,\r\n  loginWithRefreshToken,\r\n  logout,\r\n  getCurrentUser,\r\n  register,\r\n  getUsersEvents,\r\n  registerOnEvent,\r\n  unregisterFromEvent,\r\n};\r\n\r\nexport default authService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}