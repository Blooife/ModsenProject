{"ast":null,"code":"import axios from \"axios\";\nimport RegisterDto from \"../models/registerDto\";\nconst baseURL = \"http://localhost:5152\";\nconst API_URL = \"/api/auth\";\nconst login = (email, password) => {\n  return axios.post(baseURL + API_URL + \"/login\", {\n    email,\n    password\n  }).then(response => {\n    console.log(response);\n    if (response && response.data && response.data.token) {\n      localStorage.setItem(\"user\", JSON.stringify(response.data.token));\n      console.log(response.data.token);\n    }\n    return response;\n  }).catch(error => {\n    throw error; // Пробрасываем ошибку дальше для обработки в компоненте Login\n  });\n};\nconst loginWithRefreshToken = token => {\n  return axios.post(baseURL + API_URL + \"/refreshToken\", {\n    token\n  }).then(response => {\n    if (response.data.token) {\n      localStorage.setItem(\"user\", JSON.stringify(response.data.token));\n      console.log(response.data);\n    }\n    return response;\n  });\n};\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem(\"user\"));\n};\nconst register = formData => {\n  return axios.post(baseURL + API_URL + \"/register\", formData).then(response => {\n    return response;\n  }).catch(error => {\n    throw error; // Пробрасываем ошибку дальше для обработки в компоненте Login\n  });\n};\nconst authService = {\n  login,\n  loginWithRefreshToken,\n  logout,\n  getCurrentUser,\n  register\n};\nexport default authService;","map":{"version":3,"names":["axios","RegisterDto","baseURL","API_URL","login","email","password","post","then","response","console","log","data","token","localStorage","setItem","JSON","stringify","catch","error","loginWithRefreshToken","logout","removeItem","getCurrentUser","parse","getItem","register","formData","authService"],"sources":["D:/RiderProjects/Modsen/frontapp/src/services/auth.service.js"],"sourcesContent":["import axios from \"axios\";\r\nimport RegisterDto from \"../models/registerDto\"; \r\n\r\nconst baseURL = \"http://localhost:5152\";\r\n\r\nconst API_URL = \"/api/auth\";\r\n\r\nconst login = (email, password) => {\r\n  return axios\r\n    .post(baseURL + API_URL + \"/login\", {\r\n      email,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      console.log(response);\r\n      if (response && response.data && response.data.token) {\r\n\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data.token));\r\n        console.log(response.data.token);\r\n      }\r\n      return response;\r\n    })\r\n    .catch((error) => {\r\n      throw error; // Пробрасываем ошибку дальше для обработки в компоненте Login\r\n    });\r\n};\r\n\r\n\r\nconst loginWithRefreshToken = (token) => {\r\n  return axios\r\n    .post(baseURL + API_URL + \"/refreshToken\", {\r\n      token,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.token) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data.token));\r\n        console.log(response.data)\r\n      }\r\n      return response;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\nconst register = (formData) => {\r\n  return axios\r\n    .post(baseURL + API_URL + \"/register\", \r\n      formData)\r\n    .then((response) => {      \r\n      \r\n      return response;\r\n    })\r\n    .catch((error) => {\r\n      throw error; // Пробрасываем ошибку дальше для обработки в компоненте Login\r\n    });\r\n};\r\n\r\nconst authService = {\r\n  login,\r\n  loginWithRefreshToken,\r\n  logout,\r\n  getCurrentUser,\r\n  register,\r\n};\r\n\r\nexport default authService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,uBAAuB;AAE/C,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,MAAMC,OAAO,GAAG,WAAW;AAE3B,MAAMC,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EACjC,OAAON,KAAK,CACTO,IAAI,CAACL,OAAO,GAAGC,OAAO,GAAG,QAAQ,EAAE;IAClCE,KAAK;IACLC;EACF,CAAC,CAAC,CACDE,IAAI,CAAEC,QAAQ,IAAK;IAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACrB,IAAIA,QAAQ,IAAIA,QAAQ,CAACG,IAAI,IAAIH,QAAQ,CAACG,IAAI,CAACC,KAAK,EAAE;MAEpDC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACR,QAAQ,CAACG,IAAI,CAACC,KAAK,CAAC,CAAC;MACjEH,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAACC,KAAK,CAAC;IAClC;IACA,OAAOJ,QAAQ;EACjB,CAAC,CAAC,CACDS,KAAK,CAAEC,KAAK,IAAK;IAChB,MAAMA,KAAK,CAAC,CAAC;EACf,CAAC,CAAC;AACN,CAAC;AAGD,MAAMC,qBAAqB,GAAIP,KAAK,IAAK;EACvC,OAAOb,KAAK,CACTO,IAAI,CAACL,OAAO,GAAGC,OAAO,GAAG,eAAe,EAAE;IACzCU;EACF,CAAC,CAAC,CACDL,IAAI,CAAEC,QAAQ,IAAK;IAClB,IAAIA,QAAQ,CAACG,IAAI,CAACC,KAAK,EAAE;MACvBC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACR,QAAQ,CAACG,IAAI,CAACC,KAAK,CAAC,CAAC;MACjEH,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;IAC5B;IACA,OAAOH,QAAQ;EACjB,CAAC,CAAC;AACN,CAAC;AAED,MAAMY,MAAM,GAAGA,CAAA,KAAM;EACnBP,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC;AACjC,CAAC;AAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,OAAOP,IAAI,CAACQ,KAAK,CAACV,YAAY,CAACW,OAAO,CAAC,MAAM,CAAC,CAAC;AACjD,CAAC;AAED,MAAMC,QAAQ,GAAIC,QAAQ,IAAK;EAC7B,OAAO3B,KAAK,CACTO,IAAI,CAACL,OAAO,GAAGC,OAAO,GAAG,WAAW,EACnCwB,QAAQ,CAAC,CACVnB,IAAI,CAAEC,QAAQ,IAAK;IAElB,OAAOA,QAAQ;EACjB,CAAC,CAAC,CACDS,KAAK,CAAEC,KAAK,IAAK;IAChB,MAAMA,KAAK,CAAC,CAAC;EACf,CAAC,CAAC;AACN,CAAC;AAED,MAAMS,WAAW,GAAG;EAClBxB,KAAK;EACLgB,qBAAqB;EACrBC,MAAM;EACNE,cAAc;EACdG;AACF,CAAC;AAED,eAAeE,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}