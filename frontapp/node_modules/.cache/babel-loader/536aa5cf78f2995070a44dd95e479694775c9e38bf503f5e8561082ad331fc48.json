{"ast":null,"code":"import axios from \"axios\";\nconst baseURL = \"https://localhost:5152\";\nconst API_URL = \"/api/auth\";\nconst login = (email, password) => {\n  return axios.post(baseURL + API_URL + \"/login\", {\n    email,\n    password\n  }).then(response => {\n    if (response && response.data && response.data.accessToken) {\n      localStorage.setItem(\"user\", JSON.stringify(response.data));\n      console.log(response.data);\n    }\n    return response;\n  }).catch(error => {\n    throw error; // Пробрасываем ошибку дальше для обработки в компоненте Login\n  });\n};\nconst loginWithRefreshToken = token => {\n  return axios.post(baseURL + API_URL + \"/refreshToken\", {\n    token\n  }).then(response => {\n    if (response.data.accessToken) {\n      localStorage.setItem(\"user\", JSON.stringify(response.data));\n      console.log(response.data);\n    }\n    return response;\n  });\n};\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem(\"user\"));\n};\nconst authService = {\n  login,\n  loginWithRefreshToken,\n  logout,\n  getCurrentUser\n};\nexport default authService;","map":{"version":3,"names":["axios","baseURL","API_URL","login","email","password","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","console","log","catch","error","loginWithRefreshToken","token","logout","removeItem","getCurrentUser","parse","getItem","authService"],"sources":["D:/RiderProjects/Modsen/frontapp/src/components/test/services/auth.service.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseURL = \"https://localhost:5152\";\r\n\r\nconst API_URL = \"/api/auth\";\r\n\r\nconst login = (email, password) => {\r\n  return axios\r\n    .post(baseURL + API_URL + \"/login\", {\r\n      email,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      if (response && response.data && response.data.accessToken) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        console.log(response.data);\r\n      }\r\n      return response;\r\n    })\r\n    .catch((error) => {\r\n      throw error; // Пробрасываем ошибку дальше для обработки в компоненте Login\r\n    });\r\n};\r\n\r\n\r\nconst loginWithRefreshToken = (token) => {\r\n  return axios\r\n    .post(baseURL + API_URL + \"/refreshToken\", {\r\n      token,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.accessToken) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        console.log(response.data)\r\n      }\r\n      return response;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\nconst authService = {\r\n  login,\r\n  loginWithRefreshToken,\r\n  logout,\r\n  getCurrentUser,\r\n};\r\n\r\nexport default authService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,wBAAwB;AAExC,MAAMC,OAAO,GAAG,WAAW;AAE3B,MAAMC,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EACjC,OAAOL,KAAK,CACTM,IAAI,CAACL,OAAO,GAAGC,OAAO,GAAG,QAAQ,EAAE;IAClCE,KAAK;IACLC;EACF,CAAC,CAAC,CACDE,IAAI,CAAEC,QAAQ,IAAK;IAClB,IAAIA,QAAQ,IAAIA,QAAQ,CAACC,IAAI,IAAID,QAAQ,CAACC,IAAI,CAACC,WAAW,EAAE;MAC1DC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACC,IAAI,CAAC,CAAC;MAC3DM,OAAO,CAACC,GAAG,CAACR,QAAQ,CAACC,IAAI,CAAC;IAC5B;IACA,OAAOD,QAAQ;EACjB,CAAC,CAAC,CACDS,KAAK,CAAEC,KAAK,IAAK;IAChB,MAAMA,KAAK,CAAC,CAAC;EACf,CAAC,CAAC;AACN,CAAC;AAGD,MAAMC,qBAAqB,GAAIC,KAAK,IAAK;EACvC,OAAOpB,KAAK,CACTM,IAAI,CAACL,OAAO,GAAGC,OAAO,GAAG,eAAe,EAAE;IACzCkB;EACF,CAAC,CAAC,CACDb,IAAI,CAAEC,QAAQ,IAAK;IAClB,IAAIA,QAAQ,CAACC,IAAI,CAACC,WAAW,EAAE;MAC7BC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACC,IAAI,CAAC,CAAC;MAC3DM,OAAO,CAACC,GAAG,CAACR,QAAQ,CAACC,IAAI,CAAC;IAC5B;IACA,OAAOD,QAAQ;EACjB,CAAC,CAAC;AACN,CAAC;AAED,MAAMa,MAAM,GAAGA,CAAA,KAAM;EACnBV,YAAY,CAACW,UAAU,CAAC,MAAM,CAAC;AACjC,CAAC;AAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,OAAOV,IAAI,CAACW,KAAK,CAACb,YAAY,CAACc,OAAO,CAAC,MAAM,CAAC,CAAC;AACjD,CAAC;AAED,MAAMC,WAAW,GAAG;EAClBvB,KAAK;EACLgB,qBAAqB;EACrBE,MAAM;EACNE;AACF,CAAC;AAED,eAAeG,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}